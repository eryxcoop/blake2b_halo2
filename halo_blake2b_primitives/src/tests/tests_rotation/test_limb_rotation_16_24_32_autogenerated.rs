use crate::tests::tests_rotation::limb_rotation_circuit_autogenerated::LimbRotationCircuitAutogenerated;
use super::*;

#[test]
fn test_limb_rotation_chip_should_generate_32_bit_rotation_trace_correctly() {
    let input_number = 1u128;
    let input: Value<Fr> = value_for(input_number);
    let expected_result: Value<Fr> = value_for(input_number << 32);

    let circuit = LimbRotationCircuitAutogenerated::<Fr, 32>::new_for(input, expected_result);

    let prover = MockProver::run(17, &circuit, vec![]).unwrap();
    prover.verify().unwrap();
}

#[test]
#[should_panic]
fn test_limb_rotation_chip_for_32_bits_should_panic_over_a_wrong_result() {
    let input_number = 1u128;
    let input: Value<Fr> = value_for(input_number);
    let expected_result: Value<Fr> = value_for((input_number << 32) + 1 );

    let circuit = LimbRotationCircuitAutogenerated::<Fr, 32>::new_for(input, expected_result);

    let prover = MockProver::run(17, &circuit, vec![]).unwrap();
    prover.verify().unwrap();
}
